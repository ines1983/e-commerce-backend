spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

spring.jpa.hibernate.ddl-auto=none

# Social login provider props
spring.security.oauth2.client.registration.google.clientId=956036504133-tr9kkmtn1b3s0j8edgb7f60fbldq5q1p.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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

redirect.uri=http://localhost:4200/home
app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec=864000000
app.auth.cors.allowedOrigins=http://localhost:4200
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorization request.
    # We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris=https://localhost:4200/oauth2/redirect
# For detailed logging during development
#logging.level.com=TRACE
logging.level.org.springframework=INFO
#logging.level.org.hibernate.SQL=TRACE
#logging.level.org.hibernate.type=TRACE
